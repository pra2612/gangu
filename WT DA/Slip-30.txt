Slip-30

Q.1)CreateaXMLfilewhichgivesdetailsofbooksavailablein“Bookstore”from following
Categories.
1)Yoga
2)Story
3)Technical
Andelementsineachcategoryareinthefollowingformat
<Book>
<Book_Title>
--------------</Book_Title>
<Book_Author>---------------</Book_Author>
<Book_Price>
--------------</Book_Price>
</Book>
Savethefileas“Bookcategory.xml”
.
Ans:




<?xmlve<?xmlversion=”1.0”encoding=”UTF-8”?>
<Bookstore>
<Yoga>
<Book>
<Book_Title>LightonYoga</Book_Title>
<Book_Author>B.K.S.Iyengar</Book_Author>
<Book_Price>20.99</Book_Price>
</Book>
<Book>
<Book_Title>TheYogaBible</Book_Title>
<Book_Author>ChristinaBrown</Book_Author>
<Book_Price>15.50</Book_Price>
</Book>
</Yoga>
<Story>
<Book>
<Book_Title>TheAlchemist</Book_Title>
<Book_Author>PauloCoelho</Book_Author>
<Book_Price>12.99</Book_Price>
</Book>
<Book>
<Book_Title>TheDaVinciCode</Book_Title>
<Book_Author>DanBrown</Book_Author>
<Book_Price>14.75</Book_Price>
</Book>
</Story>
<Technical>
<Book>
<Book_Title>PythonforDataScienceHandbook</Book_Title>
<Book_Author>JakeVanderPlas</Book_Author>
<Book_Price>28.99</Book_Price>
</Book>
<Book>
<Book_Title>CrackingtheCodingInterview</Book_Title>
<Book_Author>GayleLaakmannMcDowell</Book_Author>
<Book_Price>23.50</Book_Price>
</Book>
</Technical>
</Bookstore>




Q.2)Createthedataset.transactions=[[‘eggs’,‘milk’,’bread’],[‘eggs’,‘apple’],[‘milk’,‘bread’],
[‘apple’,
‘milk’],[‘milk’,‘apple’,‘bread’]].
Convertthecategoricalvaluesintonumericformat.Applytheapriorialgorithm ontheabove
datasetto
Generatethefrequentitemsetsandassociationrules.
Ans:




Transactions=[[‘eggs’,‘milk’,‘bread’],[‘eggs’,‘apple’],[‘milk’,‘bread’],[‘apple’,‘milk’],[‘milk’,
‘apple’,‘bread’]]
#Createadictionarytomapitemstouniquenumericvalues
Item_to_num ={‘eggs’:1,‘milk’:2,‘bread’:3,‘apple’:4}
#Convertthecategoricalvaluesinthedatasettonumericvalues
Numeric_transactions=[]
Fortransactionintransactions:
Numeric_transaction=[item_to_num[item]foritem intransaction]
Numeric_transactions.append(numeric_transaction)
Print(numeric_transactions)
From mlxtend.frequent_patternsimportapriori,association_rules
#Generatefrequentitemsetswithaminimum supportof0.4
Frequent_itemsets=apriori(numeric_transactions,min_support=0.4,use_colnames=True)
#Generateassociationruleswithaminimum confidenceof0.7
Rules=association_rules(frequent_itemsets,metric=”confidence”,min_threshold=0.7)
Print(frequent_itemsets)
Print(rules)