Slip-21


Q.1)AddaJavaScriptFileinCodeigniter.TheJavascriptcodeshouldcheckwhetheranumber
is
Positiveornegative.
Ans:



Htmlfile
<!DOCTYPEhtml>
<html>
<head>
<title>NumberCheck</title>
<scriptsrc=”<?phpechobase_url(‘js/numberCheck.js’);?>”></script>
</head>
<body>
<h1>NumberCheck</h1>
<p>Enteranumbertocheck:</p>
<inputtype=”number”id=”num”/>
<buttononclick=”checkNumber(document.getElementById(‘num’).value)”>Check</button>
</body>
</html>
Createisfilechecknumber.js
FunctioncheckNumber(num){
If(num >0){
Alert(“Thenumberispositive.”);
}elseif(num <0){
Alert(“Thenumberisnegative.”);
}else{
Alert(“Thenumberiszero.”);
}
}




Q.2)BuildasimplelinearregressionmodelforUserData.
Ans:


Importpandasaspd
From sklearn.model_selectionimporttrain_test_split
From sklearn.linear_modelimportLinearRegression
From sklearn.metricsimportmean_squared_error,r2_score
Importmatplotlib.pyplotasplt
#1.Collectdata
Data=pd.read_csv(‘user_data.csv’)
#2.Preprocessdata
Data.dropna(inplace=True)
X=data[‘age’].values.reshape(-1,1)
Y=data[‘income’].values.reshape(-1,1)
#3.Splitdata
X_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)
#4.Trainthemodel
Regressor=LinearRegression()
Regressor.fit(x_train,y_train)
#5.Predictvalues
Y_pred=regressor.predict(x_test)
#6.Evaluatemodel
Mse=mean_squared_error(y_test,y_pred)
R2=r2_score(y_test,y_pred)
Print(“Meansquarederror:“,mse)
Print(“R-squared:“,r2)
#7.Visualizeresults
Plt.scatter(x_test,y_test,color=’gray’)
Plt.plot(x_test,y_pred,color=’red’,linewidth=2)
Plt.show()