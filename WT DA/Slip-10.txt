Slip-10

Q.1)CreateaHTMLfiletoinserttextbeforeandafteraParagraphusingjQuery.[Hint:Use
before()
Andafter()].
Ans:


<!DOCTYPEhtml>
<html>
<head>
<title>InserttextbeforeandafterparagraphusingjQuery</title>
<scriptsrc=https://code.jquery.com/jquery-3.6.0.min.js></script>
</head>
<body>
<h1>InserttextbeforeandafterparagraphusingjQuery</h1>
<p>Thisisaparagraph.</p>
<script>
$(document).ready(function(){
$(“p”).before(“Textinsertedbeforetheparagraph.“);
$(“p”).after(“Textinsertedaftertheparagraph.”);
});
</script>
</body>
</html>


Q2).Createthefollowingdatasetinpython&Convertthecategoricalvaluesintonumeric
format.Apply
Theapriorialgorithm ontheabovedatasettogeneratethefrequentitemsetsandassociation
rules.Repeat
Theprocesswithdifferentmin_supvalues.
TID={1:[“eggs”,”milk”,”bread”],2=[“eggs”,”apple”],3=[“milk”,”bread”],4=[“apple”,”milk”],5=[“milk”,”ap
ple”,”bread”]}
Ans:


Importpandasaspd
From mlxtend.preprocessingimportTransactionEncoder
From mlxtend.frequent_patternsimportapriori,association_rules
#Createthedataset
Dataset={
1:[“eggs”,”milk”,”bread”],
2:[“eggs”,”apple”],
3:[“milk”,”bread”],
4:[“apple”,”milk”],
5:[“milk”,”apple”,”bread”]
}
#Convertcategoricalvaluesintonumericformat
Te=TransactionEncoder()
Te_ary=te.fit(dataset.values()).transform(dataset.values())
Df=pd.DataFrame(te_ary,columns=te.columns_)
#ApplyApriorialgorithm togeneratefrequentitemsetsandassociationrules
Min_sup=0.4
Frequent_itemsets=apriori(df,min_support=min_sup,use_colnames=True)
Association_rules=association_rules(frequent_itemsets,metric=”confidence”,
min_threshold=0.6)
#Printthefrequentitemsetsandassociationrules
Print(“FrequentItemsets:\n”,frequent_itemsets)
Print(“\nAssociationRules:\n”,association_rules)