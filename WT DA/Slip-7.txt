Slip-7

Q.1)WriteaPHPscripttoread“Movie.xml”fileandprintallMovieTitleandActorNameoffile
using
OMDocumentParser.“Movie.xml”fileshouldcontainfollowinginformationwithatleast5
records
Wthvalues.M vieInfoMovieNo,MovieTitle,ActorName,ReReleaseYear.
Ans:


Phpfile
<?php
//LoadtheXMLfile
$xml=newDOMDocument();
$xml->load(‘Movie.xml’);
//Getallthemovienodes
$movies=$xml->getElementsByTagName(‘MovieInfo’);
//Loopthrougheachmovienodeandprintthemovietitleandactorname
Foreach($moviesas$movie){
Echo“MovieTitle:“.$movie->getElementsByTagName(‘MovieTitle’)[0]->textContent.“,“;
Echo“ActorName:“.$movie->getElementsByTagName(‘ActorName’)[0]->textContent.“<br>”;
}
?>
XMLfile
<?xmlversion=”1.0”?>
<MovieList>
<MovieInfo>
<MovieNo>1</MovieNo>
<MovieTitle>TheShawshankRedemption</MovieTitle>
<ActorName>Tim Robbins</ActorName>
<ReleaseYear>1994</ReleaseYear>
</MovieInfo>
<MovieInfo>
<MovieNo>2</MovieNo>
<MovieTitle>TheGodfather</MovieTitle>
<ActorName>MarlonBrando</ActorName>
<ReleaseYear>1972</ReleaseYear>
</MovieInfo>
<MovieInfo>
<MovieNo>3</MovieNo>
<MovieTitle>TheDarkKnight</MovieTitle>
<ActorName>ChristianBale</ActorName>
<ReleaseYear>2008</ReleaseYear>
</MovieInfo>
<MovieInfo>
<MovieNo>4</MovieNo>
<MovieTitle>TheGodfather:PartII</MovieTitle>
<ActorName>AlPacino</ActorName>
<ReleaseYear>1974</ReleaseYear>
</MovieInfo>
<MovieInfo>
<MovieNo>5</MovieNo>
<MovieTitle>12AngryMen</MovieTitle>
<ActorName>HenryFonda</ActorName>
<ReleaseYear>1957</ReleaseYear>
</MovieInfo>
</MovieList>


Q.2)DownloadtheMarketbasketdataset.Writeapythonprogram toreadthedatasetand
displayits
Information.Preprocessthedata(dropnullvaluesetc.)Convertthecategoricalvaluesinto
numeric
Format.Applytheapriorialgorithm ontheabovedatasettogeneratethefrequentitemsetsand
association
Rules..
Ans:


Importpandasaspd
From mlxtend.preprocessingimportTransactionEncoder
From mlxtend.frequent_patternsimportapriori,association_rules
#readthedataset
Df=pd.read_csv(‘Market_Basket_Optimisation.csv’,header=None)
#dropnullvalues
Df.dropna(inplace=True)
#convertcategoricalvaluestonumericusingone-hotencoding
Te=TransactionEncoder()
Te_ary=te.fit(df.values).transform(df.values)
Df=pd.DataFrame(te_ary,columns=te.columns_)
#generatefrequentitemsetsusingapriorialgorithm
Frequent_itemsets=apriori(df,min_support=0.01,use_colnames=True)
#generateassociationrulesfrom frequentitemsets
Rules=association_rules(frequent_itemsets,metric=”lift”,min_threshold=1)
#displayinformation
Print(“OriginalDataset:\n”)
Print(df.head())
Print(“\nFrequentItemsets:\n”)
Print(frequent_itemsets)
Print(“\nAssociationRules:\n”)
Print(rules)